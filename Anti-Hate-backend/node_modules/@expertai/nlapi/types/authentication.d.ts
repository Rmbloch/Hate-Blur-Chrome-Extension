export declare class Authentication {
    private _accessToken;
    /**
     * Username from env variable
     *
     * @throws "Missing env variable EAI_USERNAME"
     * @returns {string} Return username
     * @private
     * @memberof Authentication
     */
    private get username();
    /**
     * Password from env variable
     *
     * @throws "Missing env variable EAI_PASSWORD"
     * @returns {string} Return user password
     * @private
     * @memberof Authentication
     */
    private get password();
    /**
     * Check if generated token is JWT token
     *
     * @throws "Invalid type of token"
     * @returns {boolean} Return true or false if generated token is JWT token
     * @private
     * @memberof Authentication
     */
    private isJWTToken;
    /**
     * Check if generated token is expired
     *
     * @returns {boolean} Return true or false if generated token is expired
     * @private
     * @memberof Authentication
     */
    isTokenExpired(): boolean;
    /**
     * Generate token with currect username and password
     *
     * @returns {string} Return generated token
     * @private
     * @memberof Authentication
     */
    private generateToken;
    /**
     * Get access token from private parameter of Authentication class
     *
     * @returns {string} Return generated token
     * @memberof Authentication
     */
    getAccessToken(): Promise<string>;
}
