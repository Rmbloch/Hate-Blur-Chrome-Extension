/**
 * expert.ai Natural Language API
 * Natural Language API provides a comprehensive set of natural language understanding capabilities based on expert.ai technology: <ul>   <li>Context based document analysis, comprising:</li>   <ul>     <li>Deep linguistic analysis, which, in turn, comprises:</li>     <ul>       <li>Text subdivision</li>       <li>Part-of-speech tagging</li>       <li>Morphological analysis</li>       <li>Lemmatization</li>       <li>Syntactic analysis</li>       <li>Semantic analysis</li>     </ul>     <li>Keyphrase extraction</li>     <li>Named entity recognition</li>     <li>Relation extraction</li>     <li>Sentiment analysis</li>   </ul>   <li>Taxonomy based document classification</li>   <li>Information detection performed by detectors</li> </ul>
 *
 * The version of the OpenAPI document: v2
 * Contact: api.inquiry@expert.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from "./configuration";
import { AxiosInstance, AxiosRequestConfig } from 'axios';
export declare const BASE_PATH: string;
/**
 *
 * @export
 */
export declare const COLLECTION_FORMATS: {
    csv: string;
    ssv: string;
    tsv: string;
    pipes: string;
};
/**
 *
 * @export
 * @interface RequestArgs
 */
export interface RequestArgs {
    url: string;
    options: AxiosRequestConfig;
}
/**
 *
 * @export
 * @class BaseAPI
 */
export declare class BaseAPI {
    protected basePath: string;
    protected axios: AxiosInstance;
    protected configuration: Configuration | undefined;
    constructor(configuration?: Configuration, basePath?: string, axios?: AxiosInstance);
}
/**
 *
 * @export
 * @class RequiredError
 * @extends {Error}
 */
export declare class RequiredError extends Error {
    field: string;
    name: "RequiredError";
    constructor(field: string, msg?: string);
}
